function [ feature_mat_words ] = word2phoneme( phonemelist )
% This function transforms words from DISC transcription into feature
% vectors (words have a consonant - vowel - consonant structure)

vowelsDISC     = {'I', 'i', '#', 'D', 'u', '1', '2', '5'};
consonantsDISC = {'T', 'N', 's', 't', 'd', 'p', 'k', 'b', ...
    'f', 'm', 'S', 'z', 'n'};

% 10 vowel features
vowels_to_features_all10 = [...
    0	1	0	0	0	1	0	0	1	0  1; ...
    1	0	0	0	0	1	0	0	1	0  1; ...
    0	0	0	0	1	0	1	0	1	0  1; ...
    0	0	0	1	0	0	1	1	0	0  1; ...
    1	0	0	0	0	0	1	1	0	0  1; ...
    0	1	0	0	0	1	0	0	1	1  0; ...
    1	0	0	0	0	1	0	0	1	1  0; ...
    0	0	1	0	0	0	1	1	0	1  0];

% This matrix was corrected on 05.03.2015 - f = non-sibilant
% 13 consonant features
consonants_to_features = [...
    0	0	1	0	0	0	0	0	1	0	1	1	0; ...
    0	0	0	0	0	1	1	0	0	1	0	0	1; ...
    0	0	0	1	0	0	0	1	0	0	1	1	0; ...
    0	0	0	1	0	0	1	0	0	0	1	1	0; ...
    0	0	0	1	0	0	1	0	0	0	1	0	1; ...
    1	0	0	0	0	0	1	0	0	0	1	1	0; ...
    0	0	0	0	0	1	1	0	0	0	1	1	0; ...
    1	0	0	0	0	0	1	0	0	0	1	0	1; ...
    0	1	0	0	0	0	0	0	1	0	1	1	0; ...
    1	0	0	0	0	0	1	0	0	1	0	0	1; ...
    0	0	0	0	1	0	0	1	0	0	1	1	0; ...
    0	0	0	1	0	0	0	1	0	0	1	0	1; ...
    0	0	0	1	0	0	1	0	0	1	0	0	1];

% initialize final output matrix
feature_mat_words = zeros(length(phonemelist), 37);
% loop throught phoneme list
for i = 1:numel(phonemelist)
    phoneme = phonemelist{i};
    curr_consonant1 = phoneme(1);
    curr_vowel      = phoneme(2);
    curr_consonant2 = phoneme(3);
    
    feature_consonant1 = ~cellfun('isempty',(regexp(consonantsDISC, curr_consonant1)));
    feature_vowel      = ~cellfun('isempty',(regexp(vowelsDISC, curr_vowel)));
    feature_consonant2 = ~cellfun('isempty',(regexp(consonantsDISC, curr_consonant2)));
    feature_mat_words(i,:) = [consonants_to_features(feature_consonant1, :), ...
        vowels_to_features_all10(feature_vowel, :), ...
        consonants_to_features(feature_consonant2, :)];
end

end